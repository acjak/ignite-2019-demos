parameters:
  azureSubscription:
  environment:
  terraformStorageAccountName:

jobs:
- job: Deploy
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - task: terraformInstaller@0
      inputs:
        terraformVersion: '0.12.3'
        
    # Apply terraform
    - task: terraform@0
      inputs:      
        command: CLI
        providerAzureConnectedServiceName: ${{ parameters.azureSubscription }}
        backendAzureProviderStorageAccountName: '${{ parameters.terraformStorageAccountName }}'
        backendAzureStateFileKey: 'ignitedemo${{ parameters.environment }}.tfstate'
        cwd: terraform/
        script: |
          # Fail on errors, output every command and result to the log
          set -e -x

          # Generate a Terraform plan
          terraform plan \
            -var environment="${{ parameters.environment }}" \
            -out=${{ parameters.environment }}.tfplan \
            -input=false 

          # Apply Terraform Template
          terraform apply ${{ parameters.environment }}.tfplan

          # Get output
          APP_NAME=`terraform output app_name`

          # Set storageAccountName variable from terraform output
          echo "##vso[task.setvariable variable=appName]$APP_NAME"
 
    # Load application package
    - download: current
      artifact: app

    # Release the app
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: ${{ parameters.azureSubscription }}
        appType: 'webAppLinux'
        WebAppName: $(appName)
        packageForLinux: '$(Pipeline.Workspace)/app'
        RuntimeStack: 'DOTNETCORE|3.0'
        StartupCommand: 'dotnet demo-app.dll --urls http://0.0.0.0:8080'