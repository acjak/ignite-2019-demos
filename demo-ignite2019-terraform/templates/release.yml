parameters:
  azureSubscription:
  environment:
  terraformStorageAccountName:

jobs:
- job: Deploy
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - task: terraformInstaller@0
      inputs:
        terraformVersion: '0.12.13'
    
    - script: |
        set -e -x
        
        echo `which terraform`

        echo `terraform -v`

    - task: terraform@0
      inputs:
        command: 'CLI'
        providerAzureConnectedServiceName: 'MTC Denver Sandbox'
        backendAzureProviderStorageAccountName: 'mtcdenterraformsandbox'
        backendAzureStateFileKey: 'tfclitest.tfstate'
        cwd: tests/test-template-azure
        script: |
          # Validate
          terraform validate
          # Plan
          terraform plan -input=false -out=testplan.tf
      displayName: Run Terraform CLI
      
    # Apply terraform
    - task: terraform@0
      inputs:      
        command: CLI
        providerAzureConnectedServiceName: ${{ parameters.azureSubscription }}
        backendAzureProviderStorageAccountName: '${{ parameters.terraformStorageAccountName }}'
        backendAzureStateFileKey: 'ignitedemo${{ parameters.environment }}.tfstate'
        cwd: terraform/
        script: |
          # Validate
          terraform validate
          # Plan
          terraform plan -input=false -out=testplan.tf
 
    # Load application package
    - download: current
      artifact: app

    # Release the app
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: ${{ parameters.azureSubscription }}
        appType: 'webAppLinux'
        WebAppName: $(appName)
        packageForLinux: '$(Pipeline.Workspace)/app'
        RuntimeStack: 'DOTNETCORE|3.0'
        StartupCommand: 'dotnet demo-app.dll --urls http://0.0.0.0:8080'